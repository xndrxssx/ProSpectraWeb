generator js_client {
  provider = "prisma-client-js"
}

generator py_client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int      @id @default(autoincrement())
  username  String   @unique(map: "User_username_key")
  password  String
  userType  String   @default("produtor")
}

model Variety {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  attributes  Json     @default("[]") // Adicionando um valor padrão (array vazio)
}

model Filter {
  id         Int      @id @default(autoincrement())
  name       String
  type       String   // 'MSC', 'SNV', ou 'SG'
  parameters Json
  createdAt  DateTime @default(now())
}

model Spectra {
  id          Int      @id @default(autoincrement())
  name        String
  content    Json  // Para armazenar os dados espectrais
  variety   String
  datetime        DateTime
  local       String
  filter      String?
  graph     String?  @db.Text
  createdAt    DateTime @default(now())
}

model PredictiveModel {
  id             Int      @id @default(autoincrement())
  model_name     String
  attribute      String   // Atributo da qualidade (Y)
  hyperparameters Json    // Hiperparâmetros (JSON formatado)
  metrics         Json    // Métricas do modelo treinado 
  model           String?           
  graph           Json
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model SpectrumData {
  id          Int       @id @default(autoincrement())
  dataset   String
  wavelengths Json      @default("[]")
  X           Json      @default("[]") // Valor padrão de lista vazia
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model TargetData {
  id          Int       @id @default(autoincrement())
  attribute   String
  y           Json      @default("[]") // Valor padrão de lista vazia
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}